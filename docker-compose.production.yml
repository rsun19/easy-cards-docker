services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  backend:
    build:
      context: ./easy-cards-express
      dockerfile: Dockerfile.production1
      network: host
    container_name: backend
    ports:
      - 9000:9000
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - PRIVATE_KEY=${PRIVATE_KEY}
    depends_on:
      - postgres

  frontend:
    build:
      context: ./easy-cards
      dockerfile: Dockerfile.production
      network: host
    environment:
      - AUTH_GOOGLE_ID=${AUTH_GOOGLE_ID}
      - AUTH_GOOGLE_SECRET=${AUTH_GOOGLE_SECRET}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_PUBLIC_CLIENT_TO_API_URL=${NEXT_PUBLIC_CLIENT_TO_API_URL}
      - REDIRECT_URI=${REDIRECT_URI}
      - AUTH_SECRET=${AUTH_SECRET}
      - PRIVATE_KEY=${FRONTEND_PRIVATE_KEY}
      - AUTH_TRUST_HOST=${AUTH_TRUST_HOST}
      - AUTH_URL=${AUTH_URL}
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend

  nginx:
    container_name: nginx
    image: nginx:alpine
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "3040:80"

volumes:
  postgres_data: