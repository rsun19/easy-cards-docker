services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./sql/generated.sql:/docker-entrypoint-initdb.d/generated.sql
    restart: always

  backend:
    build:
      context: ./easy-cards-express
      dockerfile: Dockerfile.production
    container_name: backend
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - PRIVATE_KEY=${PRIVATE_KEY}
    depends_on:
      - postgres
    restart: always

  frontend:
    build:
      context: ./easy-cards
      dockerfile: Dockerfile.production
    environment:
      - AUTH_GOOGLE_ID=${AUTH_GOOGLE_ID}
      - AUTH_GOOGLE_SECRET=${AUTH_GOOGLE_SECRET}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_PUBLIC_CLIENT_TO_API_URL=${NEXT_PUBLIC_CLIENT_TO_API_URL}
      - AUTH_SECRET=${AUTH_SECRET}
      - PRIVATE_KEY=${FRONTEND_PRIVATE_KEY}
      - AUTH_TRUST_HOST=${AUTH_TRUST_HOST}
    container_name: frontend
    depends_on:
      - backend
    restart: always

  nginx:
    container_name: nginx
    image: nginx:alpine
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    restart: always

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --keep-until-expiring --email robertssun1234@gmail.com -d easyflashcards.org --agree-tos

volumes:
  postgres_data: {}
